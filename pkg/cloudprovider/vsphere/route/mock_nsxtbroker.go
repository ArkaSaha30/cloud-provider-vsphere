// Code generated by MockGen. DO NOT EDIT.
// Source: nsxtbroker.go

// Package route is a generated GoMock package.
package route

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/vmware/vsphere-automation-sdk-go/services/nsxt/model"
)

// MockNsxtBroker is a mock of NsxtBroker interface
type MockNsxtBroker struct {
	ctrl     *gomock.Controller
	recorder *MockNsxtBrokerMockRecorder
}

// MockNsxtBrokerMockRecorder is the mock recorder for MockNsxtBroker
type MockNsxtBrokerMockRecorder struct {
	mock *MockNsxtBroker
}

// NewMockNsxtBroker creates a new mock instance
func NewMockNsxtBroker(ctrl *gomock.Controller) *MockNsxtBroker {
	mock := &MockNsxtBroker{ctrl: ctrl}
	mock.recorder = &MockNsxtBrokerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNsxtBroker) EXPECT() *MockNsxtBrokerMockRecorder {
	return m.recorder
}

// QueryEntities mocks base method
func (m *MockNsxtBroker) QueryEntities(queryParam string) (model.SearchResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "QueryEntities", queryParam)
	ret0, _ := ret[0].(model.SearchResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// QueryEntities indicates an expected call of QueryEntities
func (mr *MockNsxtBrokerMockRecorder) QueryEntities(queryParam interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueryEntities", reflect.TypeOf((*MockNsxtBroker)(nil).QueryEntities), queryParam)
}

// CreateStaticRoute mocks base method
func (m *MockNsxtBroker) CreateStaticRoute(routerPath, routeID string, route model.StaticRoutes) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateStaticRoute", routerPath, routeID, route)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateStaticRoute indicates an expected call of CreateStaticRoute
func (mr *MockNsxtBrokerMockRecorder) CreateStaticRoute(routerPath, routeID, route interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateStaticRoute", reflect.TypeOf((*MockNsxtBroker)(nil).CreateStaticRoute), routerPath, routeID, route)
}

// DeleteStaticRoute mocks base method
func (m *MockNsxtBroker) DeleteStaticRoute(routerPath, routeID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteStaticRoute", routerPath, routeID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteStaticRoute indicates an expected call of DeleteStaticRoute
func (mr *MockNsxtBrokerMockRecorder) DeleteStaticRoute(routerPath, routeID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteStaticRoute", reflect.TypeOf((*MockNsxtBroker)(nil).DeleteStaticRoute), routerPath, routeID)
}

// ListRealizedEntities mocks base method
func (m *MockNsxtBroker) ListRealizedEntities(path string) (model.GenericPolicyRealizedResourceListResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRealizedEntities", path)
	ret0, _ := ret[0].(model.GenericPolicyRealizedResourceListResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRealizedEntities indicates an expected call of ListRealizedEntities
func (mr *MockNsxtBrokerMockRecorder) ListRealizedEntities(path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRealizedEntities", reflect.TypeOf((*MockNsxtBroker)(nil).ListRealizedEntities), path)
}
